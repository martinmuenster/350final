--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=10 LPM_WIDTH=4 data eq
--VERSION_BEGIN 17.1 cbx_cycloneii 2017:10:25:18:06:53:SJ cbx_lpm_add_sub 2017:10:25:18:06:53:SJ cbx_lpm_compare 2017:10:25:18:06:53:SJ cbx_lpm_decode 2017:10:25:18:06:53:SJ cbx_mgl 2017:10:25:18:08:29:SJ cbx_nadder 2017:10:25:18:06:53:SJ cbx_stratix 2017:10:25:18:06:53:SJ cbx_stratixii 2017:10:25:18:06:53:SJ  VERSION_END


-- Copyright (C) 2017  Intel Corporation. All rights reserved.
--  Your use of Intel Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Intel Program License 
--  Subscription Agreement, the Intel Quartus Prime License Agreement,
--  the Intel FPGA IP License Agreement, or other applicable license
--  agreement, including, without limitation, that your use is for
--  the sole purpose of programming logic devices manufactured by
--  Intel and sold by Intel or its authorized distributors.  Please
--  refer to the applicable agreement for further details.



--synthesis_resources = lut 16 
SUBDESIGN decode_u9a
( 
	data[3..0]	:	input;
	eq[9..0]	:	output;
) 
VARIABLE 
	data_wire[2..0]	: WIRE;
	enable_wire1	: WIRE;
	enable_wire2	: WIRE;
	eq_node[9..0]	: WIRE;
	eq_wire1w[7..0]	: WIRE;
	eq_wire2w[7..0]	: WIRE;
	w_anode230w[3..0]	: WIRE;
	w_anode247w[3..0]	: WIRE;
	w_anode257w[3..0]	: WIRE;
	w_anode267w[3..0]	: WIRE;
	w_anode277w[3..0]	: WIRE;
	w_anode287w[3..0]	: WIRE;
	w_anode297w[3..0]	: WIRE;
	w_anode307w[3..0]	: WIRE;
	w_anode317w[3..0]	: WIRE;
	w_anode328w[3..0]	: WIRE;
	w_anode338w[3..0]	: WIRE;
	w_anode348w[3..0]	: WIRE;
	w_anode358w[3..0]	: WIRE;
	w_anode368w[3..0]	: WIRE;
	w_anode378w[3..0]	: WIRE;
	w_anode388w[3..0]	: WIRE;

BEGIN 
	data_wire[2..0] = data[2..0];
	enable_wire1 = (! data[3..3]);
	enable_wire2 = data[3..3];
	eq[] = eq_node[];
	eq_node[] = ( eq_wire2w[1..0], eq_wire1w[]);
	eq_wire1w[] = ( w_anode307w[3..3], w_anode297w[3..3], w_anode287w[3..3], w_anode277w[3..3], w_anode267w[3..3], w_anode257w[3..3], w_anode247w[3..3], w_anode230w[3..3]);
	eq_wire2w[] = ( w_anode388w[3..3], w_anode378w[3..3], w_anode368w[3..3], w_anode358w[3..3], w_anode348w[3..3], w_anode338w[3..3], w_anode328w[3..3], w_anode317w[3..3]);
	w_anode230w[] = ( (w_anode230w[2..2] & (! data_wire[2..2])), (w_anode230w[1..1] & (! data_wire[1..1])), (w_anode230w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode247w[] = ( (w_anode247w[2..2] & (! data_wire[2..2])), (w_anode247w[1..1] & (! data_wire[1..1])), (w_anode247w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode257w[] = ( (w_anode257w[2..2] & (! data_wire[2..2])), (w_anode257w[1..1] & data_wire[1..1]), (w_anode257w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode267w[] = ( (w_anode267w[2..2] & (! data_wire[2..2])), (w_anode267w[1..1] & data_wire[1..1]), (w_anode267w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode277w[] = ( (w_anode277w[2..2] & data_wire[2..2]), (w_anode277w[1..1] & (! data_wire[1..1])), (w_anode277w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode287w[] = ( (w_anode287w[2..2] & data_wire[2..2]), (w_anode287w[1..1] & (! data_wire[1..1])), (w_anode287w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode297w[] = ( (w_anode297w[2..2] & data_wire[2..2]), (w_anode297w[1..1] & data_wire[1..1]), (w_anode297w[0..0] & (! data_wire[0..0])), enable_wire1);
	w_anode307w[] = ( (w_anode307w[2..2] & data_wire[2..2]), (w_anode307w[1..1] & data_wire[1..1]), (w_anode307w[0..0] & data_wire[0..0]), enable_wire1);
	w_anode317w[] = ( (w_anode317w[2..2] & (! data_wire[2..2])), (w_anode317w[1..1] & (! data_wire[1..1])), (w_anode317w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode328w[] = ( (w_anode328w[2..2] & (! data_wire[2..2])), (w_anode328w[1..1] & (! data_wire[1..1])), (w_anode328w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode338w[] = ( (w_anode338w[2..2] & (! data_wire[2..2])), (w_anode338w[1..1] & data_wire[1..1]), (w_anode338w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode348w[] = ( (w_anode348w[2..2] & (! data_wire[2..2])), (w_anode348w[1..1] & data_wire[1..1]), (w_anode348w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode358w[] = ( (w_anode358w[2..2] & data_wire[2..2]), (w_anode358w[1..1] & (! data_wire[1..1])), (w_anode358w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode368w[] = ( (w_anode368w[2..2] & data_wire[2..2]), (w_anode368w[1..1] & (! data_wire[1..1])), (w_anode368w[0..0] & data_wire[0..0]), enable_wire2);
	w_anode378w[] = ( (w_anode378w[2..2] & data_wire[2..2]), (w_anode378w[1..1] & data_wire[1..1]), (w_anode378w[0..0] & (! data_wire[0..0])), enable_wire2);
	w_anode388w[] = ( (w_anode388w[2..2] & data_wire[2..2]), (w_anode388w[1..1] & data_wire[1..1]), (w_anode388w[0..0] & data_wire[0..0]), enable_wire2);
END;
--VALID FILE
