DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 01000010100000000000000000000000; -- lw $10 0($0)

0001 : 00000010000101000000000000000000; -- add $8 $10 $0			# Use reg 8 instead of reg10. 

0002 : 00000000100100000000101010010100; -- sra $2 $8 21 			# shift $10 right by 21 to isolate xpos

0003 : 00101000110000000000011111111111; -- addi $3 $0 2047			# set all bits except bottom 11 to 0

0004 : 00000000100001000011000000001000; -- and $2 $2 $3 			# ^

0005 : 00101000100001000000000000000011; -- addi $2 $2 3 			# add 3 to x pos. 

0006 : 00101001100000000000001111111111; -- addi $6 $0 1023 		# 

0007 : 00000001100011000000010110010000; -- sll $6 $6 11 			# Erase top 11 bits.  Create a mask for bottom 21 bits.

0008 : 00101001100011000000011111111111; -- addi $6 $6 2047			# ^ 

0009 : 00000001010100000110000000001000; -- and $5 $8 $6 			# Use mask to erase top 10 bits from $8

0010 : 00000001000001000000101010010000; -- sll $4 $2 21			# shift new x value 21 to left. 

0011 : 00000010100010001000000000000000; -- add $10 $4 $8			# Found new value of $10. 

0012 : 00101001110000000000001010000000; -- addi $7 $0 640

0013 : 00110001110001000000000000000001; -- blt $7 $2 moveleft 		

0014 : 00001000000000000000000000000001; -- j moveright

0015 : 00000010000101000000000000000000; -- add $8 $10 $0			# Use reg 8 instead of reg10. 

0016 : 00000000100100000000101010010100; -- sra $2 $8 21 			# shift $10 right by 21 to isolate xpos

0017 : 00101000110000000000011111111111; -- addi $3 $0 2047			# set all bits except bottom 11 to 0

0018 : 00000000100001000011000000001000; -- and $2 $2 $3 			# ^

0019 : 00101000100001011111111111111101; -- addi $2 $2 -3 			# sub 3 to x pos. 

0020 : 00101001100000000000001111111111; -- addi $6 $0 1023 		# 

0021 : 00000001100011000000010110010000; -- sll $6 $6 11 			# Erase top 11 bits.  Create a mask for bottom 21 bits.

0022 : 00101001100011000000011111111111; -- addi $6 $6 2047			# ^ 

0023 : 00000001010100000110000000001000; -- and $5 $8 $6 			# Use mask to erase top 10 bits from $8

0024 : 00000001000001000000101010010000; -- sll $4 $2 21			# shift new x value 21 to left. 

0025 : 00000010100010001000000000000000; -- add $10 $4 $8			# Found new value of $10. 

0026 : 00101001110000000000000010000000; -- addi $7 $0 128

0027 : 00110000100011111111111111100101; -- blt $2 $7 moveright

0028 : 00001000000000000000000000001111; -- j moveleft
[0029..4095] : 00000000000000000000000000000000;
END;
