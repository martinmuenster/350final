DEPTH = 4096;
WIDTH = 32;
ADDRESS_RADIX = DEC;
DATA_RADIX = BIN;
CONTENT
BEGIN
0000 : 01000010100000000000000000000000; -- lw $10 0($0)

0001 : 00000000010000000000000000000000; -- add $1 $0 $0

0002 : 100000 is out of range for 17-bit two's complement; -- addi $2 $0 100000			# DECLARING BUFFER LOOP NUMBER

0003 : 00101000010000100000000000000001; -- addi $1 $1 1

0004 : 00010000010001011111111111111110; -- bne $1 $2 counterincrement

0005 : 00000000010101000000000000000000; -- add $1 $10 $0

0006 : 00000000100000100000101010010100; -- sra $2 $1 21

0007 : 00101000110000000000011111111111; -- addi $3 $0 2047

0008 : 00000001000001000011000000001000; -- and $4 $2 $3  			# register 4 has current x location.

0009 : 00101001110000000000000100101100; -- addi $7 $0 300			# If x position > 300, then move left.

0010 : 00101010000000000000000101011110; -- addi $8 $0 350			# If x position > 300, then move left.

0011 : 00101000100000000000000000000011; -- addi $2 $0 3			# Move velocity to the correct bits [31:21] 

0012 : 00000000100001000000101010010000; -- sll $2 $2 21 			

0013 : 00110001110010000000000000000001; -- blt $7 $4 moveright

0014 : 00110001000100000000000000000010; -- blt $4 $8 moveleft		# jank fix of blt problemmmmm

0015 : 00000010100101000010000000000000; -- add $10 $10 $2		# Updated register 10. 

0016 : 00001000000000000000000000010011; -- j endmoveball

0017 : 00000010100101000010000000000100; -- sub $10 $10 $2		# Updated register 10. 

0018 : 00001000000000000000000000010011; -- j endmoveball

0019 : 00001000000000000000000000000001; -- j bufferloop
[0020..4095] : 00000000000000000000000000000000;
END;